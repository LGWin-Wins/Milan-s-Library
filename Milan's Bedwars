local ScreenGui = Instance.new("ScreenGui")
local ScrollingFrame = Instance.new("ScrollingFrame")
local TextCombat = Instance.new("TextLabel")
local ScrollingFrame_2 = Instance.new("ScrollingFrame")
local TextRender = Instance.new("TextLabel")
local Esp = Instance.new("TextButton")
local UICorner = Instance.new("UICorner")
local ScrollingFrame_3 = Instance.new("ScrollingFrame")
local TextWorld = Instance.new("TextLabel")
local OpenClose = Instance.new("TextButton")
local UICorner_2 = Instance.new("UICorner")

--Properties:

ScreenGui.Parent = game.Players.LocalPlayer:WaitForChild("PlayerGui")
ScreenGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling

ScrollingFrame.Parent = ScreenGui
ScrollingFrame.Active = true
ScrollingFrame.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
ScrollingFrame.BorderColor3 = Color3.fromRGB(0, 0, 0)
ScrollingFrame.BorderSizePixel = 0
ScrollingFrame.Position = UDim2.new(0.212658286, 0, 0.198492467, 0)
ScrollingFrame.Size = UDim2.new(0.16624473, 0, 0.376884431, 0)

TextCombat.Name = "Text Combat"
TextCombat.Parent = ScrollingFrame
TextCombat.BackgroundColor3 = Color3.fromRGB(255, 0, 0)
TextCombat.BorderColor3 = Color3.fromRGB(0, 0, 0)
TextCombat.BorderSizePixel = 0
TextCombat.Position = UDim2.new(-0.000101214078, 0, 0, 0)
TextCombat.Size = UDim2.new(0, 178, 0, 50)
TextCombat.Font = Enum.Font.SourceSans
TextCombat.Text = "Combat"
TextCombat.TextColor3 = Color3.fromRGB(0, 0, 0)
TextCombat.TextSize = 50.000

ScrollingFrame_2.Parent = ScreenGui
ScrollingFrame_2.Active = true
ScrollingFrame_2.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
ScrollingFrame_2.BorderColor3 = Color3.fromRGB(0, 0, 0)
ScrollingFrame_2.BorderSizePixel = 0
ScrollingFrame_2.Position = UDim2.new(0.464135081, 0, 0.198492467, 0)
ScrollingFrame_2.Size = UDim2.new(0.16624473, 0, 0.376884431, 0)

TextRender.Name = "Text Render"
TextRender.Parent = ScrollingFrame_2
TextRender.BackgroundColor3 = Color3.fromRGB(0, 170, 255)
TextRender.BorderColor3 = Color3.fromRGB(0, 0, 0)
TextRender.BorderSizePixel = 0
TextRender.Size = UDim2.new(0, 166, 0, 50)
TextRender.Font = Enum.Font.SourceSans
TextRender.Text = "Render"
TextRender.TextColor3 = Color3.fromRGB(0, 0, 0)
TextRender.TextSize = 50.000

Esp.Name = "Esp"
Esp.Parent = ScrollingFrame_2
Esp.BackgroundColor3 = Color3.fromRGB(85, 255, 127)
Esp.BorderColor3 = Color3.fromRGB(0, 0, 0)
Esp.BorderSizePixel = 0
Esp.Position = UDim2.new(-0.0304568522, 0, 0.0344210826, 0)
Esp.Size = UDim2.new(0, 172, 0, 50)
Esp.Font = Enum.Font.SourceSans
Esp.Text = "Esp"
Esp.TextColor3 = Color3.fromRGB(0, 0, 0)
Esp.TextSize = 14.000

UICorner.Parent = Esp

ScrollingFrame_3.Parent = ScreenGui
ScrollingFrame_3.Active = true
ScrollingFrame_3.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
ScrollingFrame_3.BorderColor3 = Color3.fromRGB(0, 0, 0)
ScrollingFrame_3.BorderSizePixel = 0
ScrollingFrame_3.Position = UDim2.new(0.702953577, 0, 0.198492467, 0)
ScrollingFrame_3.Size = UDim2.new(0.167088553, 0, 0.376884431, 0)

TextWorld.Name = "Text World"
TextWorld.Parent = ScrollingFrame_3
TextWorld.BackgroundColor3 = Color3.fromRGB(85, 255, 127)
TextWorld.BorderColor3 = Color3.fromRGB(0, 0, 0)
TextWorld.BorderSizePixel = 0
TextWorld.Size = UDim2.new(0, 160, 0, 50)
TextWorld.Font = Enum.Font.SourceSans
TextWorld.Text = "World"
TextWorld.TextColor3 = Color3.fromRGB(0, 0, 0)
TextWorld.TextSize = 50.000

OpenClose.Name = "Open/Close"
OpenClose.Parent = ScreenGui
OpenClose.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
OpenClose.BorderColor3 = Color3.fromRGB(0, 0, 0)
OpenClose.BorderSizePixel = 0
OpenClose.Position = UDim2.new(0, 0, 0.463567853, 0)
OpenClose.Size = UDim2.new(0.0312236287, 0, 0.0515075363, 0)
OpenClose.Font = Enum.Font.SourceSans
OpenClose.Text = "Open"
OpenClose.TextColor3 = Color3.fromRGB(0, 0, 0)
OpenClose.TextSize = 14.000

UICorner_2.Parent = OpenClose

-- Scripts:

local function THFQFLH_fake_script() -- ScrollingFrame.LocalScript 
	local script = Instance.new('LocalScript', ScrollingFrame)

	local Gui = script.Parent
	
	local function onKeyPress(input)
		if input.KeyCode == Enum.KeyCode.RightShift then
			if Gui.Visible == true then
				Gui.Visible = false
			else
				Gui.Visible = true
			end
		end
	end
	
	game:GetService("UserInputService").InputBegan:Connect(onKeyPress)
	
end
coroutine.wrap(THFQFLH_fake_script)()
local function IVEDHON_fake_script() -- ScrollingFrame_2.LocalScript 
	local script = Instance.new('LocalScript', ScrollingFrame_2)

	local Gui = script.Parent
	
	local function onKeyPress(input)
		if input.KeyCode == Enum.KeyCode.RightShift then
			if Gui.Visible == true then
				Gui.Visible = false
			else
				Gui.Visible = true
			end
		end
	end
	
	game:GetService("UserInputService").InputBegan:Connect(onKeyPress)
	
end
coroutine.wrap(IVEDHON_fake_script)()
local function DCCDC_fake_script() -- Esp.LocalScript 
	local script = Instance.new('LocalScript', Esp)

	local Players = game:GetService("Players")
	local player = Players.LocalPlayer
	local button = script.Parent
	local espEnabled = false
	local playerESPs = {}
	
	local function createESP(character)
		local humanoid = character:FindFirstChild("Humanoid")
		if not humanoid then return end
	
		local billboard = Instance.new("BillboardGui")
		billboard.Name = "ESP"
		billboard.Size = UDim2.new(0, 200, 0, 50)
		billboard.StudsOffset = Vector3.new(0, 2.5, 0)
		billboard.Adornee = character:WaitForChild("Head")
	
		local textLabel = Instance.new("TextLabel")
		textLabel.Size = UDim2.new(1, 0, 1, 0)
		textLabel.Text = humanoid.DisplayName
		textLabel.BackgroundTransparency = 1
		textLabel.TextColor3 = Color3.new(1, 1, 1)
		textLabel.Font = Enum.Font.SourceSansBold
		textLabel.TextScaled = true
		textLabel.Parent = billboard
	
		billboard.Parent = character
		return billboard
	end
	
	local function handleCharacter(character)
		if espEnabled then
			playerESPs[character] = createESP(character)
		end
	end
	
	local function onCharacterAdded(character)
		handleCharacter(character)
		character.ChildAdded:Connect(function(child)
			if child:IsA("Humanoid") then
				handleCharacter(character)
			end
		end)
	end
	
	player.CharacterAdded:Connect(onCharacterAdded)
	if player.Character then
		onCharacterAdded(player.Character)
	end
	
	button.Activated:Connect(function()
		espEnabled = not espEnabled
		button.Text = espEnabled and "ESP: ON" or "ESP: OFF"
	
		for character, esp in playerESPs do
			if esp then
				esp:Destroy()
			end
		end
	
		playerESPs = {}
	
		if espEnabled and player.Character then
			playerESPs[player.Character] = createESP(player.Character)
		end
	end)
	
end
coroutine.wrap(DCCDC_fake_script)()
local function GAQB_fake_script() -- ScrollingFrame_3.LocalScript 
	local script = Instance.new('LocalScript', ScrollingFrame_3)

	local Gui = script.Parent
	
	local function onKeyPress(input)
		if input.KeyCode == Enum.KeyCode.RightShift then
			if Gui.Visible == true then
				Gui.Visible = false
			else
				Gui.Visible = true
			end
		end
	end
	
	game:GetService("UserInputService").InputBegan:Connect(onKeyPress)
	
end
coroutine.wrap(GAQB_fake_script)()
local function KRAXAZM_fake_script() -- nil.ToggleScrollingFrames 
	local script = Instance.new('LocalScript', nil)

	local button = script.Parent
	local parent = button.Parent
	local scrollingFrames = {}
	
	-- Collect all ScrollingFrames in parent
	for _, child in parent:GetChildren() do
	    if child:IsA("ScrollingFrame") then
	        table.insert(scrollingFrames, child)
	    end
	end
	
	local isOpen = false
	
	button.MouseButton1Click:Connect(function()
	    isOpen = not isOpen
	    button.Text = isOpen and "Close" or "Open"
	    
	    for _, frame in scrollingFrames do
	        frame.Visible = isOpen
	    end
	end)
	
	
end
coroutine.wrap(KRAXAZM_fake_script)()
local function ZYWWSRO_fake_script() -- OpenClose.LocalScript 
	local script = Instance.new('LocalScript', OpenClose)

	local button = script.Parent
	local parent = button.Parent
	local scrollingFrames = {}
	
	-- Collect all ScrollingFrames in parent
	for _, child in parent:GetChildren() do
		if child:IsA("ScrollingFrame") then
			table.insert(scrollingFrames, child)
		end
	end
	
	local isOpen = false
	
	button.MouseButton1Click:Connect(function()
		isOpen = not isOpen
		button.Text = isOpen and "Close" or "Open"
	
		for _, frame in scrollingFrames do
			frame.Visible = isOpen
		end
	end)
	
end
